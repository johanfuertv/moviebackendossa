server:
  port: 8080

spring:
  application:
    name: movie-theater-backend
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:movie_theater}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  
  flyway:
    locations: classpath:db/migration
    baseline-on-migrate: true
    baseline-version: 0
  
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  
  mail:
    host: ${MAIL_HOST:sandbox.smtp.mailtrap.io}
    port: ${MAIL_PORT:2525}
    username: ${MAIL_USER:your-username}
    password: ${MAIL_PASS:your-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    from: ${MAIL_FROM:noreply@movietheater.com}

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}
  expiration: ${JWT_EXPIRATION:86400} # 24 hours in seconds

# AWS S3 Configuration
aws:
  s3:
    bucket: ${AWS_S3_BUCKET:movie-theater-images}
    region: ${AWS_S3_REGION:us-east-1}
    access-key: ${AWS_ACCESS_KEY:}
    secret-key: ${AWS_SECRET_KEY:}

# Storage Configuration
storage:
  type: ${STORAGE_TYPE:local} # local or s3
  upload-dir: ${UPLOAD_DIR:uploads}

# CORS Configuration
cors:
  allowed-origins: ${CORS_ORIGINS:http://localhost:4200}
  allowed-methods: GET,POST,PUT,DELETE,PATCH,OPTIONS
  allowed-headers: "*"

logging:
  level:
    com.movietheater: DEBUG
    org.springframework.security: DEBUG